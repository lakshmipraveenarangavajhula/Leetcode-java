
Given a list of sorted characters letters containing only lowercase letters, and given a target letter target, find the smallest element in the list that is larger than the given target.

Letters also wrap around. For example, if the target is target = 'z' and letters = ['a', 'b'], the answer is 'a'.


class Solution {
    public char nextGreatestLetter(char[] letters, char target) {
        
        
        int left=0;
        int right=letters.length;
        int mid=0;
        
        while(left<right)
        {
            mid=left+(right-left)/2;
            if(letters[mid]<=target)
                left=mid+1;
            else
                right=mid;
        }
        //Because lo can end up pointing to index 'n', in which case we return the first element
        return letters[left%letters.length];
      
        
    }
}
        
        
 Time - O(logN)
 Binary Search
 
Input:
letters = ["c", "f", "j"]
target = "j"
Output: "c"

Input:
letters = ["c", "f", "j"]
target = "k"
Output: "c"

   
