
public class Solution {
public int depthSumInverse(List<NestedInteger> nestedList) {
    int unweighted = 0, weighted = 0;
    while (!nestedList.isEmpty()) {
        List<NestedInteger> nextLevel = new ArrayList<>();
        for (NestedInteger ni : nestedList) {
            if (ni.isInteger())
            {
                     unweighted += ni.getInteger();
                  //  System.out.println(unweighted);
            }
               
            else
                nextLevel.addAll(ni.getList());
        }
        weighted += unweighted;
            System.out.println(weighted);
        nestedList = nextLevel;
    }
    return weighted;
}
}

ip:[1,[4,[6]]]
op:17

Explanation: 1*3+4*2+6*1 =17

Input: [[1,1],2,[1,1]]
Output: 8 
Explanation: Four 1's at depth 1, one 2 at depth 2.
