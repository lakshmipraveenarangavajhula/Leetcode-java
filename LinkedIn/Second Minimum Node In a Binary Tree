/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
            
            if(root.left==null || root.right==null) return -1;
            
            int l = (root.left.val==root.val)? findSecondMinimumValue(root.left) : root.left.val;
            int r = (root.right.val==root.val)? findSecondMinimumValue(root.right) : root.right.val;
            
            return (l==-1 || r==-1)?Math.max(l,r):Math.min(l,r);
            
        
    }
}

Input: 
    2
   / \
  2   5
     / \
    5   7

Output: 5
Explanation: The smallest value is 2, the second smallest value is 5.

Input: 
    2
   / \
  2   2

Output: -1
Explanation: The smallest value is 2, but there isn't any second smallest value.
