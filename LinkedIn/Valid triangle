class Solution {
    public static int triangleNumber(int[] A) {
    Arrays.sort(A);
    int count = 0, n = A.length;
    for (int i=n-1;i>=2;i--) {
        int l = 0, r = i-1;
        while (l < r) {
            if (A[l] + A[r] > A[i]) {
                count += r-l;
                r--;
            }
            else l++;
        }
    }
    return count;
}
    
    
}


/*
Remember, the array is sorted
If the sum of two small elements (at left index and right index) is greater than the rightmost element (largest), then it is obvious that the subsequent sum of pairs will be greater than the rightmost element.
In your case [2,2,4,5], if (2+4 > 5) then keeping the right index at the same position and increasing the left (the second 2+4 is obviously > 5)
The reason for count+=r-l is to find out how many pairs satisfy this property
In this case, there are two pairs that satisfy this property (2,4) and (2,4). since the right index is decremented, the count becomes r-l which is 2-0 (2 pairs).

*/
